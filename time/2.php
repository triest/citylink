<?php

/**
 * @charset UTF-8
 *
 * Задание 2. Работа с массивами и строками.
 *
 * Есть список временных интервалов (интервалы записаны в формате чч:мм-чч:мм).
 *
 * Необходимо написать две функции:
 *
 *
 * Первая функция должна проверять временной интервал на валидность
 *    принимать она будет один параметр: временной интервал (строка в формате
 *    чч:мм-чч:мм) возвращать boolean
 *
 *
 * Вторая функция должна проверять "наложение интервалов" при попытке добавить
 * новый интервал в список существующих принимать она будет один параметр:
 * временной интервал (строка в формате чч:мм-чч:мм) возвращать boolean
 *
 *  "наложение интервалов" - это когда в промежутке между началом и окончанием
 *  одного интервала, встречается начало, окончание или то и другое
 *  одновременно, другого интервала
 *
 *  пример:
 *
 *  есть интервалы
 *    "10:00-14:00"
 *    "16:00-20:00"
 *
 *  пытаемся добавить еще один интервал
 *    "09:00-11:00" => произошло наложение
 *    "11:00-13:00" => произошло наложение
 *    "14:00-16:00" => наложения нет
 *    "14:00-17:00" => произошло наложение
 */

# Можно использовать список:

$list = array(
    '09:00-11:00',
    '11:00-13:00',
    '15:00-16:00',
    '17:00-20:00',
    '20:30-21:30',
    '21:30-22:30',
);

function validate($interval)
{
    // ппроверка формата строки
    if (!preg_match("/^(?:[01]\d:[0-5][0-9]|2[0-3]:[0-5][0-9])(?:\s?)-(?:\s?)(?:[01]\d:[0-5][0-9]|2[0-3]:[0-5][0-9])/",
        $interval)
    ) {
        return false;
    }

    $splited = explode("-", $interval);
    // в массиви 0-начало время 1-окончание
    /*массив ы\времени*/

    /*разбиваем каждые время на часы ии минуты*/
    $begin_time = $splited[0];
    $begin_time = explode(":", $begin_time);

    $end_time = $splited[1];
    $end_time = explode(":", $end_time);

    /*если они валидны, то смотрим на сими интервалы*/
    // часы начала больше времени конца
    if ($begin_time[0] > $end_time[0]) {
        return false;
    } elseif
    ($begin_time[0] == $end_time[0]
    ) {
        /*если часы одинаковые, смотрим минуты*/
        //если минуты начала ьольше минут окончания
        if ($begin_time[1] > $end_time[1]) {
            return false;
        }
    }

    // возвращаем положительное значениу
    return true;
}


/* проверка наложений*/
function nalog($interval)
{

    if (!validate($interval)) {
        return false;
    }

    /*************************/
    /*парсим входную строку
    */
    $splited = explode("-", $interval);


    /*разбиваем  время на часы ии минуты*/
    $input_nach = $splited[0];
    $input_nach = explode(":", $input_nach);
    /*окончание*/
    $input_okon = $splited[1];
    $input_okon = explode(":", $input_okon);


    /*************************/
    /*попробуем перевести все в минутв*/
    $input_nach = $input_nach[0] * 60 + $input_nach[1];
    $input_okon = $input_okon[0] * 60 + $input_okon[1];

    global $list;

    $nalog = false;

    foreach ($list as $value) {
        /* парсим значение в листе*/
        $splited = explode("-", $value);// парсим начало и окончание
        $nach = explode(":", $splited[0]); // тут часы и минуты начала
        $nach = $nach[0] * 60 + $nach[1]; //время начала

        $okon = explode(":", $splited[1]); // окончание отрезка
        $okon = $okon[0] * 60 + $okon[1];
        /* проверка всех вариантов надожения*/        //все переводим в минуты для удобства сравнения (относительно 00:00)
        if (($input_nach < $nach and $input_okon > $nach and $input_okon
                < $okon)
            or
            ($input_nach > $nach and $input_okon < $okon)
            or
            ($input_nach > $nach and $input_nach < $okon)
        ) {
            echo $interval;
            echo "=> произошло наложение";
            echo "\r\n";
            $nalog = true;

        } else {
            /*добавляем в массив*/
            echo $interval;
            echo "=> наложений нет";
            echo "\r\n";
            //   array_push($list, $interval);
        }
        /*теперь проверяем*/
    }
    if (!$nalog) {
        array_push($list, $interval);
    }
}

print_r($list);
nalog("23:10-23:20");
print_r($list);


?>